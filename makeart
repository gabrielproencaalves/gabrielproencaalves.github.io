#!/bin/sh

dirssplit(){
  OLDIFS="$IFS"
  IFS="$IFS/"
  echo $INPUTFILE
  IFS="$OLDIFS"
}

dircount(){
  echo $(($(dirssplit | wc -w) - 1))
}

dirnew(){
  COUNT=$(dircount)
  NEWDIR="."
  for dir in $(dirssplit); do
    if [ $COUNT -eq 0 ]; then
      break
    fi
    NEWDIR="$NEWDIR/$dir"
    COUNT=$((COUNT - 1))
  done
  echo "$NEWDIR/$1"
}

replace(){
# $1 - the old expression
# $2 - the new expression
# $3 - the output file
  sed -i -e "s/$1/$2/" $3
}

load_template_html(){
  HTML_FILE="$1"

  file_to_string $HTML_FILE | literalize
}

# Transforma um conteúdo de múltiplas linhas em uma sequência de caracteres
file_to_string(){
  OLDIFS="$IFS"
  IFS="
"
  STRING=""
  FILE="$1"
  for LINE in $(cat $FILE)
  do
    STRING="$STRING""$LINE"'\\''n'
    echo "$STRING" > an.txt
  done
  IFS="$OLDIFS"

  echo "$STRING"
}

# Transforma o conteúdo recebido em uma string compatível com sed
literalize(){
  # / para \/
  # " para \"
  # >' ' para >
  # ' '< para <
  sed -e 's/\//\\\//g' \
      -e 's/\"/\\\"/g' \
      -e 's/> />/g'    \
      -e 's/ </</g'
}

# Remove as linhas vazias vazias de um arquivo
delete_empty_lines(){
  sed -i -e '/^$/d' $*
}

main() {
  # Arquivo de conteúdos markdown
  INPUTFILE=$1

  # Caminho do arquivo final
  OUTPUTFILE=$(dirnew index.html)

  # Configurações do <head> do html final
  HEAD="$(cat templates/head.html)"
  HEAD="$(literalize " "$HEAD" ")"

  # Informações do cabeçalho do html final
  NAVIGATION="$(cat templates/nav.html)"
  NAVIGATION="$(literalize " "$NAVIGATION" ")"

  # Unir cabeçalho, conteúdo e rodapé em um rascunho em markdown
  cat templates/header.md \
      $INPUTFILE          \
      templates/footer.md \
      > rascunho.md


  # Converter rascunho markdown para index.html
  # Acrescentando alguns detalhes ao html final
  lowdown -sthtml rascunho.md --html-no-skiphtml -o $OUTPUTFILE
  replace "<body>" "$NAVIGATION" $OUTPUTFILE
  replace "<\/head>" "$HEAD" $OUTPUTFILE

  # Delimitar conteúdo principal
  replace ".*;;;StartMainContent.*" "<article>" $OUTPUTFILE
  replace ".*;;;EndMainContent.*" "<\/article>" $OUTPUTFILE

  # Inserir seção de comentários
  replace ".*;;;CommentsArea.*" \
          "<div class=\"giscus\"><\/div>" \
          $OUTPUTFILE

  # Delimitar conteúdo do rodapé
  replace ".*;;;StartFooter.*" "<footer>" $OUTPUTFILE
  replace ".*;;;EndFooter.*" "<\/footer>" $OUTPUTFILE

  # Remover rascunho markdown
  rm rascunho.md
}

if [ $# -eq 0 ]; then
  echo "USAGE: makeart path/to/markdown/file.md"
  exit 1
fi

main $*
